{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Cart/Cart_pc.js","Cart/Cart_m.js","Cart/Cart.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","connect","state","cartInfo","UserArray","props","useState","total","setTotal","useEffect","TotalCounter","totolPrice","price","count","className","map","a","number","src","thum","width","alt","title","size","color","onClick","dispatch","type","index","id","Cart","history","useHistory","console","log","device","setDevice","view1024","window","matchMedia","checkDevice","matches","addEventListener","removeEventListener"],"mappings":"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","file":"static/js/5.dcef536c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState,useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction CartPC (props){\r\n\r\n    \r\n    let [total,setTotal] = useState(\"cost\")\r\n\r\n    // function TotalCounter(){\r\n\r\n    //     let totolPrice = 0;\r\n    //     console.log(props.cartInfo);\r\n    //     for(let i = 0; i < props.cartInfo.length; i++){\r\n    //         let price = props.cartInfo[i].price;\r\n    //         console.log(price)\r\n    //         let count = props.cartInfo[i].count;\r\n    \r\n    //         totolPrice += (price * count)\r\n    //     }\r\n    //     setTotal(totolPrice)\r\n    // }\r\n    \r\n\r\n    useEffect(()=>{\r\n        function TotalCounter(){\r\n\r\n            let totolPrice = 0;\r\n            for(let i= 0; i < props.cartInfo.length ; i++){\r\n                let price = props.cartInfo[i].price;\r\n                //console.log(price)\r\n                let count = props.cartInfo[i].count;\r\n        \r\n                totolPrice += (price * count)\r\n            }\r\n            setTotal(totolPrice)\r\n        }\r\n        TotalCounter()\r\n        \r\n        return TotalCounter()\r\n\r\n    },[props.cartInfo])\r\n    \r\n\r\n    return(\r\n        <div className=\"cart-table\">\r\n            <table>\r\n                <thead>\r\n                    <tr><th>상품번호</th><th>상품이름/정보</th><th>갯수</th><th>상품가격</th><th>구매가격</th></tr>\r\n                </thead> \r\n                <tbody>\r\n                    {\r\n                        props.cartInfo\r\n                        ? props.cartInfo.map(function(a, i){\r\n                            \r\n                            return(\r\n                                <tr key={i}>\r\n                                    <td>{a.number}</td>\r\n                                    <td>\r\n                                        <div className=\"cart-main-info\">\r\n                                            <img src={a.thum} width=\"100px\" alt=\"\"/>\r\n                                            <span className=\"cart-it-title\">{a.title}</span>\r\n                                            <span className=\"cart-it-size\">{a.size}</span>\r\n                                            <span className=\"cart-it-color\">{a.color}</span>\r\n                                        </div>\r\n                                        \r\n                                    </td>\r\n                                    <td> \r\n                                        <button \r\n                                        onClick= {()=>{\r\n                                            //TotalCounter()\r\n                                            props.dispatch({type:'subtract', index : i})\r\n                                        }} className=\"countbtn\">-</button>\r\n                                        {a.count}\r\n                                        <button \r\n                                        onClick= {()=>{\r\n                                            //TotalCounter()\r\n                                            props.dispatch({type:'add', index : i})\r\n                                        }} className=\"countbtn\"\r\n                                        >+</button>\r\n                                    </td>\r\n                                    <td>{a.price}</td>\r\n                                    <td>{a.price * a.count}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                        :null\r\n                    }\r\n                    \r\n                </tbody>\r\n            </table>\r\n            <section id=\"counter\">\r\n                <div className=\"counter-inner\">\r\n                    <div className=\"counter-box\">\r\n                        <div>총 합계</div>\r\n                        <div className=\"total\">{total}원</div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction takeCart (state){\r\n    return{\r\n        cartInfo : state.UserArray\r\n    }\r\n}\r\n\r\n\r\nexport default connect(takeCart)(CartPC);","import { connect } from 'react-redux';\r\n\r\n\r\nfunction CartMobile(props){\r\n    return(\r\n        <div className=\"cart-m-content\">\r\n            {\r\n                props.cartInfo\r\n                ? props.cartInfo.map(function(a,i){\r\n                    return(\r\n                        <div className=\"cart-list\" key={i}>\r\n                            <div className=\"cart-image\">\r\n                                <img src={a.thum} alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"cart-m-info\">\r\n                                <p className=\"title\">{a.title}</p>\r\n                                <p className=\"size\">사이즈 <span>{a.size}</span></p>\r\n                                <p className=\"color\">색상 <span>{a.color}</span></p>\r\n                                <p className=\"price\">가격 <span>{a.price}</span></p>\r\n                                <div className=\"cart-select\">\r\n                                    <button>삭제</button>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )\r\n                })\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction takeCart (state){\r\n    return{\r\n        cartInfo : state.UserArray\r\n    }\r\n}\r\n\r\nexport default connect(takeCart)(CartMobile);","import React, {useEffect, useState } from 'react';\r\n//import { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Cart.scss';\r\nimport CartPC from './Cart_pc';\r\nimport CartMobile from './Cart_m';\r\n\r\nfunction Cart(props){\r\n\r\n    \r\n    let history = useHistory();\r\n    console.log(props.cartInfo)\r\n    let [device, setDevice] = useState('false');\r\n\r\n    useEffect(()=>{\r\n        const view1024 = window.matchMedia(\"(max-width:1024px)\")\r\n        const checkDevice = ()=>{\r\n            if(view1024.matches){\r\n                console.log(\"mobile\")\r\n                setDevice(false)\r\n            }else{\r\n                console.log(\"pc\")\r\n                setDevice(true)\r\n            }\r\n        }\r\n        checkDevice();\r\n        window.addEventListener('load',checkDevice)\r\n        window.addEventListener('resize',checkDevice)\r\n        return ()=>{\r\n            window.removeEventListener('load',checkDevice)\r\n            window.removeEventListener('resize',checkDevice)\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"cart-container\">\r\n            <h2 className=\"cart-title\">장바구니</h2>\r\n\r\n\r\n            <div className=\"cart-cont-wrap\">\r\n                {\r\n                    device\r\n                    ? <CartPC ></CartPC>\r\n                    : <CartMobile></CartMobile>\r\n                    \r\n                }\r\n                \r\n            </div>\r\n            \r\n\r\n            <div className=\"buy-action\">\r\n                <button>결제하기</button>\r\n                <button onClick={()=>{\r\n                    history.push('/');\r\n                }}>홈으로 가기</button>\r\n                \r\n            </div>\r\n\r\n            \r\n            \r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Cart;"],"sourceRoot":""}